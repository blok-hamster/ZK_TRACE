import{readFileSync as t}from"fs";import{resolve as e,dirname as r}from"path";import{initialize as o}from"zokrates-js";import a from"seedrandom";import{ethers as s}from"ethers";import i from"isomorphic-unfetch";function n(){return n=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t},n.apply(this,arguments)}class c{constructor(t){this.nodeEndpoint=void 0,this.apikey=void 0,this.baseUrl=void 0,this.nodeEndpoint=t.nodeEndpoint||"https://api.hyperspace.node.glif.io/rpc/v1",this.baseUrl=t.baseUri||"http://localhost:5000/",this.apikey=t.apikey}invoke(t,e){const r=`${this.baseUrl}${t}`,o=n({},e,{headers:{"content-type":"application/json",apiKey:this.apikey}});return i(r,o).then(t=>{if(200===t.status)return t.json();throw new Error("call failed")})}async getProvider(){return new s.providers.JsonRpcProvider(this.nodeEndpoint)}}class p extends c{async readCid(t){return this.invoke(`storage/readData/${t}`)}async readCarData(t){return this.invoke(`storage/createCar/${t}`)}async createCar(t,e){return this.invoke(`storage/createCar/${e}`,{method:"POST",body:JSON.stringify(t)})}async uploadCar(t){return this.invoke(`storage/uploadCar/${t}`,{method:"POST"})}async updateCar(t,e){return this.invoke(`storage/createCar/${e}`,{method:"PUT",body:JSON.stringify(t)})}async getMerkelProof(t,e){return this.invoke(`storage/getMerkelProof/${t}/${e}`,{method:"GET"})}}class h extends p{constructor(...t){super(...t),this.rootFromPath="../circuit",this.rootToPath="sdk/circuit/root.zok"}async randomNumber(t){let e=[];for(let r=0;r<4;r++){const r=a(t,{entropy:!0});e.push(Math.abs(r.int32()).toString())}return e}async getNullifier(t){const e=a(t,{entropy:!1});return Math.abs(e.int32())}async generateZkProof(t){return this.invoke("zk/generateProof",{method:"POST",body:JSON.stringify({input:t})})}async verifyZkProof(t){return this.invoke("zk/verifyProof",{method:"POST",body:JSON.stringify(t)})}async fileSystemResolver(o,a){const s=e(r(e(o)),a);return t(s).toString()}async getSource(t,e){return await this.fileSystemResolver(t,e)}async getZokrateProvider(){return await o()}async getArtifacts(t){return(await this.getZokrateProvider()).compile(t)}async getPreImage(t){try{const e=await this.getZokrateProvider(),r=await this.getSource("../circuit","sdk/circuit/preImage.zok"),o=await this.getArtifacts(r),{output:a}=e.computeWitness(o,t);return JSON.parse(a)}catch(t){console.log(t)}}async generateZkProof1(t){try{const e=await this.randomNumber(t),r=await this.getZokrateProvider(),o=await this.getSource(this.rootFromPath,this.rootToPath),a=await this.getArtifacts(o),s=await this.getPreImage(e),i=[...e,...s],{witness:n}=r.computeWitness(a,i),c=r.setup(a.program),p=r.generateProof(a.program,n,c.pk),h=c.vk;return{message:"ok",details:{proofBuffer:JSON.stringify(p),verifierKeyBuffer:JSON.stringify(h)}}}catch(t){return console.log(t),{message:t}}}async verifyZkProof1(t){const e=t.verifierKeyBuffer,r=JSON.parse(t.proofBuffer),o=JSON.parse(e);try{const t=(await this.getZokrateProvider()).verify(o,r);return console.log(t),t}catch(t){console.log(t)}}}const y=[];class f extends h{async createTraceAgreement(t,e,r){try{new s.Contract(e,y,r)}catch(t){console.log(t)}}}class u extends f{}var g;g=u,[f].forEach(t=>{Object.getOwnPropertyNames(t.prototype).forEach(e=>{Object.defineProperty(g.prototype,e,Object.getOwnPropertyDescriptor(t.prototype,e)||Object.create(null))})});export{u as default};
